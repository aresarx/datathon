//////////////////////////////////////////
//////////////////Funciones///////////////
	
	var multiplicador = 50;
	var ultimoCP = 0;

	// Inicialización de pestañas
	$( function() {$( "#tabs" ).tabs();} );

	//Inicialización de slider
	$( function() {$( "#slider" ).slider({
		slide: function(event, ui) {
	        if (event.originalEvent) {
	            multiplicador = $('#slider').slider("option", "value");
	           	actualizarMapa();
	        }
	    },
     	min: 10,
     	max: 140,
     	value: 70,
	});} );

	//Inicialización de barras de progreso
	$( function() {
		$( "#progressbar1" ).progressbar({value: 0});
		$( "#progressbar2" ).progressbar({value: 0});
		$( "#progressbar3" ).progressbar({value: 0});
	} );
	$("#progressbar2").css( 'background', 'rgba(255, 81, 220, 0.4)' );

	//Pantalla de carga
	$(document).ready(function() {
		setTimeout(function(){
			$('body').addClass('loaded');
			$('h1').css('color','#222222');
		}, 1000); //Incremento de 1s para evitar carga demasiado rápida.
		
	});

	//Carga de datos pre-procesados
	function cargarDatosCajas(allText) {
	    var record_num = 2;  
	    var allTextLines = allText.split(/\r\n|\n/);
	    var entries = allTextLines[0].split(',');
	    var lines = [];

	    var headings = entries.splice(0,record_num);
	    while (entries.length>0) {
	        cp = entries.shift();
	        num = entries.shift();
	        lines[cp]=num;
	    }
	    return lines;
	}
	function cargarDatosGasto(allText) {
	    var record_num = 3;  
	    var allTextLines = allText.split(/\r\n|\n/);
	    var entries = allTextLines[0].split(',');
	    var lines = [];

	    var headings = entries.splice(0,record_num);
	    while (entries.length>0) {
	        cp = entries.shift();
	        suma = entries.shift();
	        cuenta = entries.shift();
	        lines[cp]=[suma,cuenta];
	    }
	    return lines;
	}
	function cargarDatosParo(allText) {
	    var record_num = 4;
	    var allTextLines = allText.split(/\r\n|\n/);
	    var entries = allTextLines[0].split(',');
	    var lines = [];

	    var headings = entries.splice(0,record_num);
	    while (entries.length>0) {
	        cp = entries.shift();
	        total = entries.shift();
	        totalH = entries.shift();
	        totalM = entries.shift();
	        lines[cp]=[total,totalH,totalM];
	    }
	    return lines;
	}
	var datosCajas = cargarDatosCajas("'cp','num',46002,2,46005,2,46006,2,46007,2,46008,3,46009,3,46011,2,46012,2,46014,3,46015,2,46016,2,46017,3,46018,1,46019,2,46020,1,46021,2,46022,1,46023,2,46025,2,46026,3,46035,1,46100,1,46110,1,46111,1,46112,1,46113,1,46114,1,46117,1,46118,1,46119,1,46120,1,46130,1,46131,1,46132,1,46133,1,46134,1,46136,1,46138,1,46139,1,46140,1,46143,1,46148,1,46160,2,46163,1,46164,1,46165,1,46168,1,46170,1,46171,1,46172,1,46176,1,46177,1,46178,1,46180,1,46181,1,46183,1,46185,1,46190,1,46191,2,46192,1,46193,1,46194,1,46195,1,46196,1,46197,1,46199,1,46200,2,46210,1,46220,1,46230,1,46240,1,46260,1,46266,1,46267,1,46270,1,46290,1,46291,1,46292,1,46293,1,46295,1,46300,3,46310,1,46314,1,46315,1,46317,1,46320,1,46330,1,46340,3,46360,2,46367,1,46368,1,46369,1,46370,1,46388,1,46389,1,46390,1,46392,1,46393,1,46400,1,46410,2,46417,1,46420,1,46430,1,46440,1,46450,1,46460,1,46469,1,46470,4,46500,3,46512,1,46520,1,46529,1,46530,1,46540,1,46550,1,46560,1,46590,1,46600,2,46610,1,46613,1,46614,1,46620,1,46623,1,46624,1,46625,1,46630,1,46635,1,46640,1,46650,1,46660,1,46667,1,46670,1,46680,1,46690,1,46691,1,46692,1,46701,1,46702,2,46713,1,46716,1,46722,1,46727,1,46729,1,46740,1,46760,1,46770,1,46780,1,46791,1,46800,1,46812,1,46814,1,46815,1,46820,1,46821,1,46822,1,46823,1,46824,1,46825,1,46830,1,46837,1,46838,1,46840,1,46841,1,46844,1,46850,1,46860,1,46868,1,46870,3,46880,1,46892,1,46893,1,46894,1,46900,7,46910,3,46920,2,46930,1,46940,1,46950,1,46960,2,46970,1,46980,2");
	var datosGasto = cargarDatosGasto("'cp','total','operaciones',46001,990417,22261,46002,612564,9715,46003,1217626,26819,46004,813428,13223,46005,2366938,37817,46006,5171691,79704,46007,6004538,91762,46008,3843686,60974,46009,6876038,99391,46010,1757212,31406,46011,3935581,66423,46012,2109455,37176,46013,2181523,47809,46014,6989357,90969,46015,5937657,82321,46016,1942528,38712,46017,7099570,99719,46018,6611833,97453,46019,5114303,80566,46020,3810819,62058,46021,3626692,57426,46022,6370081,89400,46023,3932450,63177,46024,952551,24500,46025,6982996,95986,46026,4308973,66072,46035,711900,17673,46100,1767985,36477,46110,1078337,18923,46111,720618,14108,46112,365291,6492,46113,1098005,22508,46114,849859,18238,46115,141638,3018,46116,176648,3457,46117,2076846,34606,46118,360537,7359,46119,502808,10267,46120,3090950,55798,46130,1323814,26137,46131,756719,14962,46132,1112876,21684,46133,1537700,29324,46134,1354040,19098,46135,702130,14374,46136,681684,12197,46137,190092,4688,46138,955546,18026,46139,307557,6477,46140,67829,1206,46141,3220,96,46142,3668,77,46143,47843,1603,46144,6872,65,46145,4573,116,46146,8774,175,46147,3985,71,46148,66298,1524,46149,131824,3089,46160,1684405,28944,46162,131858,2392,46163,233457,4138,46164,660932,11973,46165,342222,6335,46166,112713,1785,46167,11328,171,46168,88442,1780,46169,112784,2459,46170,1024804,18472,46171,687617,12453,46172,163805,3125,46173,1075,23,46174,52435,1215,46175,42243,831,46176,111285,2132,46177,207838,3798,46178,313947,5685,46179,4835,63,46180,1085418,18782,46181,237932,4263,46182,528529,8841,46183,1096311,20480,46184,729150,12887,46185,1394080,26822,46190,1677402,25778,46191,804631,15374,46192,513258,9093,46193,295631,5549,46194,245592,3757,46195,280155,5424,46196,403940,7647,46197,329524,5636,46198,26670,435,46199,137979,2347,46200,1729427,33156,46210,1179621,23087,46220,1352373,24492,46230,1493742,25164,46240,483418,7929,46250,48500,702,46260,285314,5712,46266,139482,3362,46267,76353,1514,46268,717,8,46269,16713,431,46270,409207,7279,46290,1287803,24572,46291,128191,2384,46292,129636,2821,46293,130575,2378,46294,69305,1266,46295,42727,1148,46300,871270,15692,46310,149116,3264,46311,9250,197,46312,11717,225,46313,119872,2821,46314,160328,2795,46315,96985,2118,46317,64921,1389,46320,275349,5934,46321,8195,297,46330,187660,4180,46340,1782340,32196,46350,11359,273,46351,177,2,46352,45072,885,46353,354,9,46354,38755,736,46355,26414,283,46356,9411,24,46357,44136,888,46360,1132189,20827,46367,231797,4132,46368,151404,3173,46369,223161,4634,46370,1745195,26081,46380,1701779,25518,46388,870941,14018,46389,849125,14902,46390,282583,5409,46391,10898,462,46392,197530,3938,46393,301465,5704,46394,1057,21,46400,444801,7305,46408,2860,66,46409,386,9,46410,1119077,19028,46417,121184,2737,46418,7404,205,46419,100651,1866,46420,330285,6152,46430,367844,6554,46439,70720,1530,46440,1463751,21795,46450,1148883,18950,46460,678775,14479,46469,141252,2876,46470,2603020,44645,46500,724840,12214,46501,20901,453,46510,16862,305,46511,39598,806,46512,93028,1412,46514,3044,82,46515,16465,244,46520,721676,13003,46529,301829,5351,46530,1471324,25132,46540,835795,16022,46550,553403,11169,46560,356505,6905,46590,145709,3063,46591,19648,338,46592,17376,430,46593,7088,128,46594,19987,517,46595,25481,539,46600,583066,13409,46610,606098,11019,46611,12058,489,46612,6321,130,46613,39603,851,46614,65074,1464,46620,225510,5037,46621,7210,134,46622,18574,460,46623,126349,2479,46624,103469,2327,46625,177971,3430,46630,171866,2757,46635,75959,1473,46640,131272,2550,46650,307232,5532,46659,8710,205,46660,122697,2820,46666,12258,255,46667,102846,2129,46668,14040,282,46669,76014,1378,46670,169539,3103,46680,131638,2891,46687,6972,162,46688,29103,583,46689,14000,293,46690,171383,2874,46691,195127,4164,46692,110585,2343,46701,162610,2839,46702,209279,4343,46703,19394,413,46710,11112,191,46711,14082,269,46712,10514,89,46713,54461,1333,46714,9132,232,46715,7128,199,46716,77124,1626,46717,12070,300,46720,23210,383,46721,9229,250,46722,33000,804,46723,38946,651,46724,19761,405,46725,6108,124,46726,4274,109,46727,68766,1372,46728,4457,71,46729,39522,877,46730,47968,871,46740,234019,4835,46749,95,4,46750,39591,1153,46758,7997,199,46760,130118,2172,46770,95967,1997,46780,180062,3820,46790,7584,170,46791,60780,1380,46792,4088,87,46800,371358,5950,46810,66607,1088,46811,30,1,46812,235441,4925,46813,10551,133,46814,70408,1536,46815,134106,2910,46816,19174,256,46817,1223,16,46818,2161,38,46819,6617,102,46820,174694,3840,46821,231812,4399,46822,229596,4622,46823,231801,4612,46824,90461,1610,46825,141701,3577,46830,197274,3803,46837,160428,3600,46838,185154,3987,46839,40802,871,46840,111160,3221,46841,78209,1888,46842,14916,367,46843,19259,349,46844,56469,1090,46850,115936,2023,46860,103153,1815,46868,28225,737,46869,41116,631,46870,551032,11310,46880,102502,2088,46890,20992,411,46891,16986,259,46892,81278,1772,46893,58831,1124,46894,94535,2126,46900,4542810,78424,46901,448606,8399,46909,315,4,46910,1802424,36198,46920,2486363,47481,46930,766088,15235,46940,1044794,21542,46950,1718777,31010,46960,1187280,23937,46970,1156294,24345,46980,2746193,51775,46988,7304,76,46989,100007,2050");
	var datosParo = cargarDatosParo("'cp','total','totalHombre','totalMujer',46001,61721,26828,34893,46002,61721,26828,34893,46003,61721,26828,34893,46004,61721,26828,34893,46005,61721,26828,34893,46006,61721,26828,34893,46007,61721,26828,34893,46008,61721,26828,34893,46009,61721,26828,34893,46010,61721,26828,34893,46011,61721,26828,34893,46012,61721,26828,34893,46013,61721,26828,34893,46014,61721,26828,34893,46015,61721,26828,34893,46016,61721,26828,34893,46017,61721,26828,34893,46018,61721,26828,34893,46019,61721,26828,34893,46020,61721,26828,34893,46021,61721,26828,34893,46022,61721,26828,34893,46023,61721,26828,34893,46024,61721,26828,34893,46025,61721,26828,34893,46026,61721,26828,34893,46035,61721,26828,34893,46112,61721,26828,34893,46131,61721,26828,34893,46135,61721,26828,34893,46100,3959,1752,2207,46110,637,281,356,46111,383,165,218,46113,1727,789,938,46114,225,105,120,46115,233,93,140,46118,255,121,134,46120,1401,570,831,46130,1335,614,721,46131,286,125,161,46132,600,253,347,46133,890,353,537,46134,525,228,297,46135,312,119,193,46136,496,186,310,46139,519,226,293,46140,76,39,37,46141,18,11,7,46143,14,8,6,46145,1,0,1,46146,11,6,5,46147,10,4,6,46148,51,19,32,46149,226,94,132,46162,50,27,23,46163,144,56,88,46164,177,89,88,46165,31,14,17,46166,40,20,20,46167,46,26,20,46168,55,18,37,46169,124,53,71,46170,226,109,117,46171,203,101,102,46172,38,15,23,46174,64,30,34,46175,33,16,17,46176,136,63,73,46178,65,29,36,46179,17,11,6,46180,953,414,539,46183,1095,432,663,46185,1858,731,1127,46191,822,365,457,46193,237,112,125,46195,142,66,76,46196,147,64,83,46197,57,25,32,46198,87,38,49,46200,2415,967,1448,46210,775,316,459,46220,1718,738,980,46230,895,417,478,46240,906,373,533,46260,734,254,480,46266,68,30,38,46267,67,25,42,46269,87,31,56,46291,98,41,57,46293,26,11,15,46294,19,6,13,46295,22,10,12,46300,645,299,346,46310,46,25,21,46314,42,18,24,46315,44,18,26,46317,20,12,8,46320,69,37,32,46330,66,27,39,46340,1404,606,798,46350,35,11,24,46360,751,378,373,46368,126,63,63,46369,102,44,58,46370,1238,571,667,46380,528,220,308,46388,186,92,94,46392,75,39,36,46393,157,65,92,46400,1906,858,1048,46410,2304,1072,1232,46417,128,47,81,46418,85,40,45,46430,295,132,163,46440,505,178,327,46460,1830,777,1053,46469,181,84,97,46470,4840,2032,2808,46510,62,19,43,46512,211,83,128,46514,17,6,11,46515,42,16,26,46529,292,122,170,46530,1239,531,708,46550,304,133,171,46560,194,75,119,46590,82,32,50,46592,7,3,4,46593,22,12,10,46594,24,9,15,46600,3617,1438,2179,46610,220,88,132,46611,65,25,40,46612,190,69,121,46614,185,51,134,46620,509,188,321,46621,25,15,10,46622,37,20,17,46623,70,35,35,46624,69,40,29,46625,60,26,34,46630,146,55,91,46635,60,20,40,46640,366,142,224,46650,1380,501,879,46660,148,58,90,46666,111,50,61,46667,79,41,38,46669,111,47,64,46670,242,109,133,46687,245,109,136,46691,316,128,188,46692,94,36,58,46711,201,73,128,46712,167,76,91,46714,62,25,37,46716,97,41,56,46717,266,142,124,46720,327,139,188,46723,184,90,94,46725,19,12,7,46726,56,22,34,46729,89,35,54,46740,1550,591,959,46750,172,72,100,46758,70,32,38,46760,1267,491,776,46770,273,151,122,46780,2048,888,1160,46790,84,36,48,46800,2650,1097,1553,46810,394,164,230,46812,265,104,161,46813,40,15,25,46814,109,43,66,46815,225,86,139,46817,11,4,7,46818,18,6,12,46820,179,71,108,46821,252,115,137,46822,123,53,70,46824,61,33,28,46825,46,17,29,46837,93,36,57,46838,157,76,81,46839,21,7,14,46840,79,38,41,46842,23,14,9,46843,33,12,21,46844,56,21,35,46850,614,235,379,46860,463,184,279,46868,40,14,26,46869,89,44,45,46870,3389,1336,2053,46880,348,124,224,46890,231,76,155,46891,56,15,41,46892,169,68,101,46900,8243,3494,4749,46910,2360,1037,1323,46920,4188,1711,2477,46930,2516,1079,1437,46940,3171,1398,1773,46950,2805,1241,1564,46960,3179,1351,1828,46970,3130,1252,1878,46980,6300,2637,3663");
	var nombresCP = cargarDatosCajas("'cp','total',46140,'ADEMUZ',46729,'ADOR',46940,'AEROPUERTO DE MANISES (VALENCIA)',46890,'AGULLENT',46176,'AHILLAS',46812,'AIELO DE MALFERIT',46842,'AIELO DE RUGAT',46970,'ALAQU¿S',46860,'ALBAIDA',46470,'ALBAL',46687,'ALBALAT DE LA RIBERA',46135,'ALBALAT DELS SORELLS',46591,'ALBALAT DELS TARONCHERS',46260,'ALBERIC',46369,'ALBORACHE',46120,'ALBORAYA',46894,'ALBOY',46550,'ALBUIXECH',46293,'ALC¿NTERA DE XUQUER',46290,'ALCASSER',46172,'ALCUBLAS',46690,'ALCUDIA DE CRESPINS L',46250,'ALCUDIA L',46960,'ALDAIA',46300,'ALDEA DE ESTENAS',46910,'ALFAFAR',46594,'ALFARA DE ALGIMIA',46594,'ALFARA DE LA BARONIA',46115,'ALFARA DEL PATRIARCA',46197,'ALFARP',46893,'ALFARRASI',46725,'ALFAUIR',46593,'ALGAR DE PALANCIA',46680,'ALGEMESI',46148,'ALGIMIA DE ALFARA',46230,'ALGINET',46529,'ALMARDA DE Playa',46132,'ALM¿SSERA',46178,'ALMEZA LA',46726,'ALMISER¿',46723,'ALMOINES',46440,'ALMUSSAFES',46178,'ALPUENTE',46715,'ALQUERIA DE LA COMTESSA L/ALQUERIA DE LA CONDESA',46220,'ALTER L',46600,'ALZIRA',46800,'ANAHUIR',46162,'ANDILLA',46820,'ANNA',46266,'ANTELLA',46179,'ARAS DE LOS OLMOS',46140,'ARROYO CEREZO',46162,'ARTAJ',46869,'ATZENETA DALBAIDA',46240,'AUSIAS MARCH',46659,'AYACOR',46620,'AYORA',46357,'AZAGADOR',46178,'BALDOVAR DE ALPUENTE',46792,'BARRACA DAIGUES VIVES',46390,'BARRIO ARROYO',46930,'BARRIO DE PORTA',46960,'BARRIO DEL CRISTO',46820,'BARRIO FUENTE NEGRA',46930,'BARRIO JOSE ARTESANO',46758,'BARX',46667,'BARXETA',46868,'B»LGIDA',46713,'BELLREGUARD POBLE',46713,'BELLREGUARD DE Playa',46839,'BELLUS',46173,'BENAGEBER',46180,'BENAGUASIL',46514,'BENAVITES',46293,'BENEIXIDA',46910,'BENETUSSER',46722,'BENIARJO',46844,'BENIATJAR',46838,'BENICOLET',46689,'BENICULL DE XUQUER',46450,'BENIFAIO',46791,'BENIFAIRO DE LA VALLDIGNA',46511,'BENIFAIRO DE LES VALLS',46000,'BENIFARAIG (VER CALLEJERO DE VALENCIA)',46722,'BENIFLA',46830,'BENIGANIM',46035,'BENIMAMET',46291,'BENIMODO',46611,'BENIMUSLEM',46469,'BENIPARRELL',46000,'BENIRREDRA (VER CALLEJERO DE GANDIA)',46181,'BENISANO',46869,'BENISODA',46839,'BENISUERA',46666,'BERFULL',46117,'BETERA',46825,'BICORP',46880,'BOCAIRENT',46822,'BOLBAITE',46131,'BONREP“S I MIRAMBELL',46000,'BORBOTO (VER CALLEJERO DE VALENCIA)',46409,'BROSQUIL EL',46891,'BUFALI',46165,'BUGARRA',46360,'BU—OL',46100,'BURJASSOT',46199,'CABEZUELA LA',46390,'CALDERON',46175,'CALLES',46150,'CAMPAMENTO DE MARINES',46127,'CAMPAMENTO MILITAR DE BETERA',46178,'CAMPO ABAJO',46352,'CAMPO ARCIS',46178,'CAMPO ARRIBA',46110,'CAMPO OLIVAR',46330,'CAMPORROBLES',46178,'CANALEJA LA',46650,'CANALS',46529,'CANET DEN BERENGUER',46182,'CA—ADA LA',46351,'CA—ADA LA (REQUENA)',46740,'CARCAIXENT',46294,'CARCER',46240,'CARLET',46000,'CARPESA (VER CALLEJERO DE VALENCIA)',46178,'CARRASCA LA',46680,'CARRASCALET',46869,'CARRICOLA',46117,'CARTUJA DE PORTACELI',46147,'CASAS ALTAS',46146,'CASAS BAJAS',46131,'CASAS DE BARCENA',46352,'CASAS DE EUFEMIA',46199,'CASAS DE HERRERO',46355,'CASAS DE JUAN VICH',46621,'CASAS DE MADRONA',46312,'CASAS DE MEDINA',46310,'CASAS DE MOYA',46310,'CASAS DE PRADAS',46199,'CASAS DE SOTOS',46635,'CASAS DE VIDAL',46310,'CASAS DEL REY',46356,'CASAS DEL RIO',46313,'CASAS LAS',46171,'CASINOS',46841,'CASTELLO DE RUGAT',46726,'CASTELLONET DE LA CONQUESTA',46141,'CASTIELFABIB',46199,'CASTILBLANQUES',46196,'CATADAU',46470,'CATARROJA',46315,'CAUDETE DE LAS FUENTES',46225,'CENTRO PENITENCIARIO PICASSENT',46813,'CERD¿',46821,'CHELLA',46176,'CHELVA',46350,'CHERA',46380,'CHESTE',46390,'CHICANOS',46370,'CHIVA',46178,'CHOPO EL',46167,'CHULILLA',46625,'COFRENTES',46749,'COGULLADA',46354,'COJOS LOS',46940,'COLLADO Partida',46178,'COLLADO DE ALPUENTE',46389,'CONDE CORTICHELLES DEL Masia',46612,'CORBERA',46178,'CORCOLILLA',46759,'CORRALES DE VALLDIGNA',46313,'CORRALES LOS',46199,'CORTES DE PALLAS',46294,'COTES',46980,'CRUZ DE GRACIA',46141,'CUESTA DEL RATO',46178,'CUEVARRUZ LA',46313,'CUEVAS LAS (UTIEL)',46134,'CUIPER',46400,'CULLERA',46710,'DAIMUS',46710,'DAIMUS DE Playa',46390,'DERRAMADOR',46174,'DOME—O',46175,'DOME—O ANTIGUO',46198,'DOS AGUAS',46408,'DOSEL EL',46758,'DROVA LA',46352,'DUQUES LOS',46183,'ELIANA L',46135,'EMPERADOR',46810,'ENGUERA',46669,'»NOVA L',46176,'ERMITORIO DEL REMEDIO',46513,'ESTACION DE LOS VALLES',46409,'ESTANY EL',46590,'ESTIVELLA',46817,'ESTUBENY',46408,'FARO DE CULLERA',46512,'FAURA',46614,'FAVARA',46134,'FOIOS',46630,'FONT DE LA FIGUERA LA',46717,'FONT DEN CARR“S LA',46635,'FONTANARS DELS ALFORINS',46418,'FORTALENY',46229,'FUENTE DEL OMET',46314,'FUENTERROBLES',46000,'GANDIA (VER CALLEJERO)',46000,'GANDIA DE (VER CALLEJERO DE GANDIA) Playa',46268,'GARROFERA DE ALZIRA LA',46169,'GATOVA',46267,'GAVARDA',46894,'GENOVES',46166,'GESTALGAR',46149,'GILET',46110,'GODELLA',46388,'GODELLETA',46818,'GRANJA DE LA COSTERA LA',46000,'GRAO DE GANDIA (VER CALLEJERO DE GANDIA)',46839,'GUADASEQUIES',46610,'GUADASSUAR',46711,'GUARDAMAR DE LA SAFOR',46625,'HERVIDEROS DE COFRENTES',46162,'HIGUERUELAS',46178,'HONTANAR EL',46178,'HORTICHUELA LA',46357,'HORTUNAS',46354,'ISIDROS LOS',46624,'JALANCE',46623,'JARAFUEL',46311,'JARAGUAS',46909,'JUEZ DEL Masia',46814,'LLANERA DE RANES',46613,'LLAURI',46160,'LLIRIA',46726,'LLOCNOU DE SANT JERONI',46668,'LLOCNOU DEN FELLONET',46195,'LLOMBAI',46815,'LLOSA DE RANES LA',46838,'LLUTXENT',46339,'LOBERUELA LA',46393,'LORIGUILLA',46168,'LOSA DEL OBISPO',46179,'LOSILLA DE ARAS',46910,'LUGAR NUEVO DE LA CORONA',46368,'MACASTRE',46135,'MAHUELLA TAULADELLA RAFALELL Y VISTABELLA',46940,'MANISES',46660,'MANUEL',46728,'MARCHUQUERA',46310,'MARCOS LOS',46419,'MARENY BLAU',46419,'MARENY DE LES BARRAQUETES',46408,'MARENY DE SAN LORENZO',46419,'MARENY DE VILCHES',46409,'MARENYET EL',46163,'MARINES',46163,'MARINES VIEJO',46144,'MAS DE JACINTO',46140,'MAS DEL OLMO',46292,'MASALAVES',46112,'MASARROCHOS',46116,'MASIAS',46560,'MASSALFASSAR',46130,'MASSAMAGRELL',46470,'MASSANASSA',46133,'MELIANA',46198,'MILLARES',46711,'MIRAMAR',46711,'MIRAMAR DE Playa',46920,'MISLATA',46640,'MOGENTE/MOIXENT',46730,'MOLI SANTA MARIA',46113,'MONCADA',46310,'MONJAS LAS',46192,'MONSERRAT',46892,'MONTAVERNER',46185,'MONTECOLORADO Urbanizacion',46729,'MONTECORONA Urbanitzacio',46692,'MONTESA',46842,'MONTICHELVO',46250,'MONTORTAL',46193,'MONTROY',46136,'MUSEROS',46119,'NAQUERA',46811,'NAVALON DE ABAJO',46811,'NAVALON DE ARRIBA',46823,'NAVARRES',46145,'NEGRON',46351,'NOGUERAS LAS',46819,'NOVELE/NOVETLE',46390,'OCHANDOS LOS',46780,'OLIVA',46394,'OLIVERAL DEL Masia',46850,'OLLERIA L',46169,'OLOCAU',46870,'ONTINYENT',46199,'ORO EL',46162,'OSET DE ANDILLA',46199,'OTONEL',46844,'OTOS',46200,'PAIPORTA',46724,'PALMA DE GANDIA',46000,'PALMAR EL (VER CALLEJERO DE VALENCIA)',46714,'PALMERA',46419,'PALMERETES LES',46891,'PALOMAR EL',46980,'PATERNA',46635,'PEDRADAS LAS',46164,'PEDRALBA',46355,'PEDRONES LOS',46356,'PENEN DE ALBOSA',46420,'PERELLO EL',46000,'PERELLONET (VER CALLEJERO DE VALENCIA)',46501,'PETRES',46210,'PICANYA',46220,'PICASSENT',46712,'PILES',46712,'PILES DE Playa',46838,'PINET',46139,'POBLA DE FARNALS LA',46185,'POBLA DE VALLBONA LA',46840,'POBLA DEL DUC LA',46670,'POBLA LLARGA LA',46635,'POBLET',46162,'POBLETA DE ANDILLA',46988,'POLIGONO FUENTE DEL JARRO',46688,'POLINY¿ DE XUQUER',46357,'PONTON EL',46117,'PORTA COELI',46357,'PORTERA LA',46721,'POTRIES',46940,'PRESA LA',46530,'PU«OL',46137,'PUEBLA DE FARNALS Playa',46140,'PUEBLA DE SAN MIGUEL',46730,'PUERTO DE GANDIA',46520,'PUERTO DE SAGUNTO',46540,'PUIG DEL Playa',46540,'PUIG EL',46758,'PUIGMOLA LA',46515,'QUART DE LES VALLS',46930,'QUART DE POBLET',46510,'QUARTELL',46837,'QUATRETONDA',46824,'QUESA',46940,'RACO EL Partida',46138,'RAFELBU—OL',46716,'RAFELCOFER',46666,'RAFELGUARAF',46843,'RAFOL DE SALEM',46727,'REAL DE GANDIA',46194,'REAL DE MONTROI',46670,'REALENGO',46900,'REALON EL',46391,'REBOLLAR EL',46340,'REQUENA',46190,'RIBA-ROJA DE TURIA',46417,'RIOLA',46666,'RIU RAU',46111,'ROCAFORT',46390,'ROMA',46439,'ROMANI',46816,'ROTGLA I CORBERA',46725,'ROTOVA',46842,'RUGAT',46353,'RUICES LOS',46500,'SAGUNT/SAGUNTO',46843,'SALEM',46000,'SALER EL (VER CALLEJERO DE VALENCIA)',46625,'SALTO DE COFRENTES',46184,'SAN ANTONIO DE BENAGEBER',46390,'SAN ANTONIO DE REQUENA',46621,'SAN BENITO',46116,'SAN ISIDRO DE BENAGEBER',46669,'SAN JUAN DE ENOVA',46390,'SAN JUAN DE REQUENA',46230,'SAN PATRICIO Urbanizacion',46111,'SANTA BARBARA Urbanitzacio',46149,'SANTO ESPIRITU DEL MONTE',46142,'SANTOS LOS',46910,'SEDAVI',46592,'SEGART',46295,'SELLENT',46839,'SEMPERE',46669,'SENYERA',46118,'SERRA',46140,'SESGA',46392,'SIETE AGUAS',46460,'SILLA',46750,'SIMAT DE LA VALLDIGNA',46320,'SINARCAS',46430,'SOLLANA',46800,'SORIO',46168,'SOT DE CHERA',46410,'SUECA',46295,'SUMACARCER',46000,'TAVERNES BLANQUES (VER CALLEJERO DE VALENCIA)',46760,'TAVERNES DE LA VALLDIGNA',46760,'TAVERNES DE LA VALLDIGNA DE Playa',46622,'TERESA DE COFRENTES',46989,'TERRAMELAR',46842,'TERRATEIG',46178,'TITAGUAS',46659,'TORRE DE CERD¿',46800,'TORRE DE LLORIS',46321,'TORRE ALDEA DE LA',46144,'TORREALTA',46143,'TORREBAJA',46176,'TORRECILLA',46814,'TORRELLA',46900,'TORRENT',46816,'TORRENT DE FENOLLET',46595,'TORRES-TORRES',46668,'TOSALNOU',46269,'TOUS',46177,'TUEJAR',46389,'TURIS',46390,'TURQUIA',46300,'UTIEL',46140,'VAL DE LA SABINA',46000,'VALENCIA (VER CALLEJERO)',46691,'VALLADA',46145,'VALLANCA',46818,'VALLES',46182,'VALLESA LA Urbanizacion',46160,'VANACLOIG',46901,'VEDAT DE TORRENTE EL',46310,'VENTA DEL MORO',46394,'VENTAS DE POYO',46191,'VILAMARXANT',46720,'VILLALONGA',46270,'VILLANUEVA DE CASTELLON',46351,'VILLAR DE OLMOS',46351,'VILLAR DE TEJAS',46170,'VILLAR DEL ARZOBISPO',46317,'VILLARGORDO DEL CABRIEL',46114,'VINALESA',46199,'VI—UELAS',46800,'X¿TIVA',46770,'XERACO',46790,'XERESA',46950,'XIRIVELLA',46367,'YATOVA',46178,'YESA LA',46621,'ZARRA'");
	
	//Devuelve el nombre de un CP
	function getNombreCP(cp) {
		if(typeof nombresCP[cp] != 'undefined'){
			return nombresCP[cp];
		}else{
			var cpFormat = parseInt(cp/10)*10;
			return nombresCP[cpFormat];
		}
	}

////////////////////////////////////////
//////////////////LEAFLET///////////////

//inicialización del mapa
	map = new L.Map('mapa');		
	map.setView(new L.LatLng(39.404183, -0.637386),9);
	var OpenStreetMap_BlackAndWhite = L.tileLayer('http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png', {
		maxZoom: 15,
		minZoom: 8,
		attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
	});
	map.addLayer(OpenStreetMap_BlackAndWhite);

//Redimensionamiento del mapa dinámico
	function recargarMapa(){
		$("#mapa").height($(window).height());
	}
	$(window).resize(function(){
		   recargarMapa();
	});
	recargarMapa();
	map.invalidateSize();

// Actualización de datos de las leyendas

	function getColorBorde(cp){
		return "#ffffff";
	}

	function getParo1(cp){
		try {
		    var num = datosParo[cp][0];
			if (num == null){
				num = 0;
			}
			return num;
		}
		catch(err) {
		    return 0;
		}
	}

	function getParo2(cp){
		try {
		    var num = datosParo[cp][1];
			if (num == null){
				num = 0;
			}
			return num;
		}
		catch(err) {
		    return 0;
		}
	}

	function getParo3(cp){
		try {
		    var num = datosParo[cp][2];
			if (num == null){
				num = 0;
			}
			return num;
		}
		catch(err) {
		    return 0;
		}
	}

	function getNumTransacciones(cp){
	
		try {
		    var num = datosGasto[cp][1];
			if (num == null){
				num = 0;
			}
			return num;
		}
		catch(err) {
		    return 0;
		}
	}

	function getImporte(cp){
		try {
		    var num = datosGasto[cp][0];
				if (num == null){
					num = 0;
				}
				return num;
		}
		catch(err) {
		    return 0;
		}
		
	}

	function getNumeroCajas(cp){
		try {
			var num = datosCajas[cp];
			if (num == null){
				num = 0;
			}
			return num;
		}
		catch(err) {
		    return 0;
		}
	}

	//Devuelve la estrategia a seguir
	/*Estrategias:
		1- Poner caja
		2- Quitar caja
		3- No hacer nada
		4- Nueva caja necesaria.
	*/
	function getEstrategia(importeTotal,numeroDeCajas){
		var resultado = 3;
		if(numeroDeCajas == 0){
			if (importeTotal > 100000){
				resultado = 1;
			} else {
				resultado = 3;
			}
		}else{
			densidad = importeTotal/numeroDeCajas;
			if(densidad < 5000 * multiplicador) resultado = 3;
			if(densidad < 1000 * multiplicador) resultado = 2;
			if(densidad > 30000 * multiplicador){
				if(densidad > 40000 * multiplicador){
					resultado = 4;
				}else{
					resultado = 1;
				}
			}
		}
		return resultado;
	}

	function getTextoEstrategia(estrategia){
		resultado = "";
		switch(estrategia) {
		    case 1:
		        resultado = "<font color='#f9bd0e'>Abrir nueva caja.</font>";
		        break;
		    case 2:
		        resultado = "<font color='#232323'>Cerrar caja.</font>";
		        break;
		    case 4:
		        resultado = "<font color='#ff6384'>Nueva caja necesaria.</font>";
		        break;
		    default:
		        resultado = "<font color='#4bc0c0'>No hacer nada.</font>";
		}
		return resultado;
	}

	//Codigos de color en funcion de la estrategia
	function getColor(d) {
		valor = getEstrategia(getImporte(d),getNumeroCajas(d));
		return valor == 1 ? '#f9bd0e' :
				valor == 2  ? 'rgba(35,35,35,1)' :
				valor == 3   ? 'rgba(75, 192, 192, 1)' :
				valor == 4   ? 'rgba(255,99,132,1)' :
				'#ddd';
	}

	//Cambios de estilo dinámicos al pasar el cursor sobre codigos postales
	function style(feature) {
		return {
			weight: 2,
			opacity: 1,
			color: getColorBorde(feature.properties.COD_POSTAL),
			fillOpacity: 0.7,
			fillColor: getColor(feature.properties.COD_POSTAL)
			//feature.properties.density
		};
	}

	function highlightFeature(e) {
		var layer = e.target;

		layer.setStyle({
			weight: 5,
			color: '#666',
			dashArray: '',
			fillOpacity: 0.7
		});
		var cp = e.target.feature.properties.COD_POSTAL;
		ultimoCP = cp;
		var estrategiaCp = getEstrategia(getImporte(cp),getNumeroCajas(cp));
		$("#cpActual").html(cp);
		$("#nombreCp").html(getNombreCP(cp));
		$( "#progressbar1" ).progressbar({value: getParo1(cp)});
    	$( "#progressbar2" ).progressbar({value: getParo2(cp)});
    	$( "#progressbar3" ).progressbar({value: getParo3(cp)});
    	$("#valor1").html(getNumTransacciones(cp));
    	$("#valor2").html(getImporte(cp));
    	$("#valor3").html(getNumeroCajas(cp));
    	$("#valor4").html(getTextoEstrategia(estrategiaCp));
    	var paro1 = getParo1(cp);
    	var paro2 = getParo2(cp);
    	var paro3 = getParo3(cp);
    	$("#valor5").html(paro1);
    	$("#valor6").html(paro2);
    	$("#valor7").html(paro3);
    	$( "#progressbar2" ).progressbar({value: (paro2 / paro1)*100});
		$( "#progressbar3" ).progressbar({value: (paro3 / paro1)*100});
		$( "#progressbar1" ).progressbar({value: (getNumeroCajas(cp) / 3)*100});
	}


	function resetHighlight(e) {
		geojson.resetStyle(e.target);
	}

	//Actualización del mapa tras cambiar slider
	function actualizarMapa(){
		map.eachLayer(function (capa) {
	   		if(capa.options.fillOpacity == 0.7){
	   			capa.setStyle({
					fillColor: getColor(capa.feature.properties.COD_POSTAL),
				});
			}
		});
		var estrategiaCp = getEstrategia(getImporte(ultimoCP),getNumeroCajas(ultimoCP));
		$("#valor4").html(getTextoEstrategia(estrategiaCp));
	}

	//Funcion al hacer click en un código postal. 
	function clickMapa(e) {
		map.fitBounds(e.target.getBounds());
		var CP = e.target.feature.properties.COD_POSTAL;
	}

	//Función que se ejecuta para cada capa al añadirla al mapa
	function onEachFeature(feature, layer) {
		layer._leaflet_id = feature.properties.name; 
		layer.on({
			mouseover: highlightFeature,
			mouseout: resetHighlight,
			click: clickMapa
		});
	}

	//Inclusion de codigos postales con geojson
	var geojson = L.geoJson(statesData, {
		style: style,
		onEachFeature: onEachFeature
	}).addTo(map);
